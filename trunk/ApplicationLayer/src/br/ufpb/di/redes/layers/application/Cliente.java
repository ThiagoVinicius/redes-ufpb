
package br.ufpb.di.redes.layers.application;


import br.ufpb.di.redes.layers.transport.interfaces.Connection;
import br.ufpb.di.redes.layers.transport.interfaces.Transport;
import br.ufpb.di.redes.layers.transport.interfaces.UnnableToConnectException;
import java.io.*;
import java.net.*;
import java.util.*;
import javax.swing.*;
import java .awt.*;
import java.awt.event.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class Cliente extends javax.swing.JFrame {

    private static final Logger logger = LoggerFactory.getLogger(Cliente.class);

    //String nome;
    //Scanner reader;
    DataInputStream reader;
    //PrintWriter writer;
    DataOutputStream writer;
    //Socket sock;
    Transport transport;
    Connection sock;
    int remote_port;
    int remote_ip;

    /** Creates new form Cliente */
    public Cliente(Transport sock, int remotePort, int remoteIp) {
        transport = sock;
        remote_port = remotePort;
        remote_ip = remoteIp;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        outgoing = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        incoming = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chat");
        setBounds(new java.awt.Rectangle(200, 150, 471, 346));
        setResizable(false);

        jButton1.setText("Enviar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        incoming.setColumns(20);
        incoming.setEditable(false);
        incoming.setLineWrap(true);
        incoming.setRows(5);
        incoming.setWrapStyleWord(true);
        jScrollPane1.setViewportView(incoming);

        jScrollPane2.setViewportView(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(outgoing, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outgoing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         try{

             writer.writeUTF(outgoing.getText());
                //writer.println(outgoing.getText());
                //writer.flush();
            }
            catch(Exception ex){
                ex.printStackTrace();
            }

        outgoing.setText("");
        outgoing.requestFocus() ;
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public void run () {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                setVisible(true);
                setUpNetworking();
            }
        });
    }


  private void setUpNetworking() {
        try {
            //sock = new Socket("127.0.0.1", 9800);
            sock = transport.connect(remote_ip, remote_port);
            reader = new DataInputStream(sock.getInputStream());
            writer = new DataOutputStream(sock.getOutputStream());
            //writer = new PrintWriter(sock.getOutputStream());

            //System.out.println("networking established");
            logger.debug("Conexao feita:\n{}", sock);
        }
        catch(UnnableToConnectException ex){
            ex. printStackTrace();
        }

        Thread readerThread = new Thread(new IncomingReader());
        readerThread.start();

    }//

    //thread leitura
    public class IncomingReader implements Runnable{
        public void run(){
            String message;

            try{

                //while((message = reader.readLine()) != null ){
                while (true) {
                    message = reader.readUTF();
                    //System.out.println("read " + message);
                    logger.debug("Read: {}", message);
                    incoming.append(message + "\n");
                }

            }catch(Exception ex)
            {
                ex.printStackTrace();
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea incoming;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField outgoing;
    // End of variables declaration//GEN-END:variables

}//class
