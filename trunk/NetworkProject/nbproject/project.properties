application.title=NetworkProject
application.vendor=Thiago
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/NetworkProject.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
includes=**
jar.compress=false
javac.classpath=\
    ${libs.SLF4J.classpath}:\
    ${reference.ApplicationLayer.jar}:\
    ${reference.DataLinkLayer1.jar}:\
    ${reference.DataLinkLayer2.jar}:\
    ${reference.NetworkLayer.jar}:\
    ${reference.PhysicalLayer1.jar}:\
    ${reference.PhysicalLayer2.jar}:\
    ${reference.TransportLayer.jar}:\
    ${reference.Network_Project_Foundation.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.source=1.5
javac.target=1.5
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit.classpath}:\
    ${libs.junit_4.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
jaxbwiz.endorsed.dirs="${netbeans.home}/../ide12/modules/ext/jaxb/api"
main.class=networkproject.Main
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
platform.active=default_platform
project.ApplicationLayer=../ApplicationLayer
project.DataLinkLayer1=../DataLinkLayer1
project.DataLinkLayer2=../DataLinkLayer2
project.Network_Project_Foundation=../Network Project Foundation
project.NetworkLayer=../NetworkLayer
project.PhysicalLayer1=../PhysicalLayer1
project.PhysicalLayer2=../PhysicalLayer2
project.TransportLayer=../TransportLayer
reference.ApplicationLayer.jar=${project.ApplicationLayer}/dist/ApplicationLayer.jar
reference.DataLinkLayer1.jar=${project.DataLinkLayer1}/dist/DataLinkLayer1.jar
reference.DataLinkLayer2.jar=${project.DataLinkLayer2}/dist/DataLinkLayer2.jar
reference.Network_Project_Foundation.jar=${project.Network_Project_Foundation}/dist/Network_Project_Foundation.jar
reference.NetworkLayer.jar=${project.NetworkLayer}/dist/NetworkLayer.jar
reference.PhysicalLayer1.jar=${project.PhysicalLayer1}/dist/PhysicalLayer1.jar
reference.PhysicalLayer2.jar=${project.PhysicalLayer2}/dist/PhysicalLayer2.jar
reference.TransportLayer.jar=${project.TransportLayer}/dist/TransportLayer.jar
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.Log4J.classpath}:\
    ${libs.SLF4J-log4j.classpath}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
